<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			 http://www.springframework.org/schema/context
			 http://www.springframework.org/schema/context/spring-context-3.1.xsd
			 http://www.springframework.org/schema/util
			 http://www.springframework.org/schema/util/spring-util-3.1.xsd
			 http://www.springframework.org/schema/jdbc
			 http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
			 http://www.springframework.org/schema/security/oauth2   http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">

	<context:annotation-config/>

	<context:component-scan base-package="edu.berkeley.calcentral" />

	<task:annotation-driven/>

	<!-- Local application storage -->
	<bean id="runDataSource"
	      class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/calcentral" />
		<property name="username" value="calcentral" />
		<property name="password" value="secret" />
		<property name="initialSize" value="2"/>
		<property name="maxActive" value="20"/>
	</bean>
	<!-- Integration test storage -->
	<bean id="itDataSource"
	      class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/calcentraltest" />
		<property name="username" value="calcentraltest" />
		<property name="password" value="secret" />
	</bean>

	<bean id="oracleDataSource"
	      class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@ORACLE_URL:ORACLE_DB" />
		<property name="username" value="ORACLE_USERNAME" />
		<property name="password" value="ORACLE_PASSWORD" />
		<property name="initialSize" value="2"/>
		<property name="maxActive" value="20"/>
	</bean>

	<bean id="h2CampusDataSource"
	      class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.h2.Driver"/>
		<property name="url" value="jdbc:h2:mem:h2CampusDataSource;DB_CLOSE_DELAY=-1;MODE=Oracle"/>
		<property name="username" value="sa"/>
		<property name="password" value="sa"/>
	</bean>
	<!--
	  By default Spring will always load data non-lazily, whether it is needed or not.
	  If that becomes a problem, the configuration will need to be tweaked.
	-->
	<jdbc:initialize-database data-source="h2CampusDataSource">
		<jdbc:script location="classpath:/db/campusdata/recreate_tables.sql"/>
		<jdbc:script location="classpath:/db/campusdata/load_person_data.sql"/>
		<jdbc:script location="classpath:/db/campusdata/load_class_data.sql"/>
		<jdbc:script location="classpath:/db/campusdata/load_enrollment_data.sql"/>
	</jdbc:initialize-database>
	<bean id="campusDataSource" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetName" value="h2CampusDataSource"/>
	</bean>

	<bean id="connectionParams" class="org.apache.commons.httpclient.params.HttpConnectionManagerParams">
		<property name="connectionTimeout" value="2000"/>
		<property name="maxTotalConnections" value="1000"/>
	</bean>
	<bean id="connectionManager" class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager">
		<property name="params" ref="connectionParams"/>
	</bean>

	<oauth:resource id="canvasSecurity"
		type="authorization_code"
		client-id="set in calcentral.properties"
		client-secret="set in calcentral.properties"
		access-token-uri="http://localhost:8080/fake/oauth2/token"
		user-authorization-uri="http://localhost:8080/fake/oauth2/auth"
		client-authentication-scheme="form"
		use-current-uri="true" />

	<oauth:rest-template id="canvasRestTemplate" resource="canvasSecurity" />

	<oauth:resource id="gappsSecurity"
		type="authorization_code"
		client-id="set in calcentral.properties"
		client-secret="set in calcentral.properties"
		access-token-uri="http://localhost:8080/fake/oauth2/token"
		user-authorization-uri="http://localhost:8080/fake/oauth2/auth"
		scope="https://www.googleapis.com/auth/calendar,https://www.googleapis.com/auth/analytics.readonly"
		pre-established-redirect-uri="http://localhost:8080/api/google/gappsOAuthResponse"
		client-authentication-scheme="form"
		use-current-uri="false" />

	<oauth:rest-template id="gappsRestTemplate" resource="gappsSecurity" />

	<context:property-override
			location="classpath:/dataSource.properties"
			ignore-resource-not-found="true" />

	<context:property-override
			location="file:///${customPropsDir}/dataSource.properties"
			ignore-resource-not-found="true" />

	<context:property-override
			location="classpath:/calcentral.properties"
			ignore-resource-not-found="true"
			ignore-unresolvable="true"/>

	<util:properties id="gitProperties" location="classpath:/git.properties"/>

	<beans profile="default">
		<bean id="dataSource" class="org.springframework.aop.framework.ProxyFactoryBean">
			<property name="targetName" value="runDataSource"/>
		</bean>
	</beans>
	<beans profile="test">
		<bean id="dataSource" class="org.springframework.aop.framework.ProxyFactoryBean">
			<property name="targetName" value="itDataSource"/>
		</bean>
		<bean id="flywayClean" class="com.googlecode.flyway.core.Flyway" init-method="clean">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		<bean id="flywayInit" class="com.googlecode.flyway.core.Flyway" init-method="migrate" depends-on="flywayClean">
			<property name="dataSource" ref="dataSource"/>
		</bean>
	</beans>
</beans>
